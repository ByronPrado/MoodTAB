// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebConTablas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("WebConTablas.Models.DiarioEmocional", b =>
                {
                    b.Property<int>("ID_Diario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emociones")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hora_dormida")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Horas_celular")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Horas_redes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_Paciente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Pasos")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Diario");

                    b.HasIndex("ID_Paciente", "Fecha")
                        .IsUnique();

                    b.ToTable("DiariosEmocionales");

                    b.HasData(
                        new
                        {
                            ID_Diario = 1,
                            Descripcion = "Tuve un día difícil",
                            Emociones = "{\"feliz\":0,\"triste\":1}",
                            Estado = "inhibido",
                            Fecha = new DateTime(2024, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora_dormida = "23:00",
                            Horas_celular = 4,
                            Horas_redes = 2,
                            ID_Paciente = 1,
                            Pasos = 3000
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.Formulario", b =>
                {
                    b.Property<int>("ID_Formulario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Psiquiatra")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Formulario");

                    b.HasIndex("ID_Psiquiatra");

                    b.ToTable("Formularios");

                    b.HasData(
                        new
                        {
                            ID_Formulario = 1,
                            Created_at = new DateTime(2024, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripcion = "Formulario para evaluar estado inicial del paciente",
                            ID_Psiquiatra = 1,
                            Titulo = "Evaluación inicial"
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.FormularioAsignado", b =>
                {
                    b.Property<int>("ID_Asignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha_Asignacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Fecha_Limite")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Formulario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_Paciente")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Asignacion");

                    b.HasIndex("ID_Formulario");

                    b.HasIndex("ID_Paciente");

                    b.ToTable("FormulariosAsignados");

                    b.HasData(
                        new
                        {
                            ID_Asignacion = 1,
                            Estado = "pendiente",
                            Fecha_Asignacion = new DateTime(2024, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_Limite = new DateTime(2024, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ID_Formulario = 1,
                            ID_Paciente = 1
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.FormularioPregunta", b =>
                {
                    b.Property<int>("ID_Formulario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_Pregunta")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Orden")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Formulario", "ID_Pregunta");

                    b.HasIndex("ID_Pregunta");

                    b.ToTable("FormularioPreguntas");

                    b.HasData(
                        new
                        {
                            ID_Formulario = 1,
                            ID_Pregunta = 1,
                            Orden = 1
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.Paciente", b =>
                {
                    b.Property<int>("ID_Paciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("TEXT");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ID_Psiquiatra")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Paciente");

                    b.HasIndex("ID_Psiquiatra");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            ID_Paciente = 1,
                            Diagnostico = "Ansiedad",
                            Edad = 30,
                            Email = "ana@mail.com",
                            ID_Psiquiatra = 1,
                            Nombre = "Ana Gómez",
                            Sexo = "F",
                            Telefono = "555-5678"
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.Pregunta", b =>
                {
                    b.Property<int>("ID_Pregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Edited_at")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EscalaMax")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EscalaMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extra")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpcionesSeleccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Pregunta");

                    b.ToTable("Preguntas");

                    b.HasData(
                        new
                        {
                            ID_Pregunta = 1,
                            Contenido = "¿Cómo te has sentido hoy?",
                            Created_at = new DateTime(2024, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tipo = "texto"
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.Psiquiatra", b =>
                {
                    b.Property<int>("ID_Psiquiatra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Psiquiatra");

                    b.ToTable("Psiquiatras");

                    b.HasData(
                        new
                        {
                            ID_Psiquiatra = 1,
                            Contrasena = "1234",
                            Email = "juan@ejemplo.com",
                            Nombre = "Dr. Juan Pérez",
                            Telefono = "555-1234"
                        });
                });

            modelBuilder.Entity("WebConTablas.Models.Respuesta", b =>
                {
                    b.Property<int>("ID_Respuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Fecha_Respuesta")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Asignacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_Pregunta")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Respuesta");

                    b.HasIndex("ID_Pregunta");

                    b.HasIndex("ID_Asignacion", "ID_Pregunta")
                        .IsUnique();

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("WebConTablas.Models.DiarioEmocional", b =>
                {
                    b.HasOne("WebConTablas.Models.Paciente", "Paciente")
                        .WithMany("DiariosEmocionales")
                        .HasForeignKey("ID_Paciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("WebConTablas.Models.Formulario", b =>
                {
                    b.HasOne("WebConTablas.Models.Psiquiatra", "Psiquiatra")
                        .WithMany("Formularios")
                        .HasForeignKey("ID_Psiquiatra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Psiquiatra");
                });

            modelBuilder.Entity("WebConTablas.Models.FormularioAsignado", b =>
                {
                    b.HasOne("WebConTablas.Models.Formulario", "Formulario")
                        .WithMany("FormulariosAsignados")
                        .HasForeignKey("ID_Formulario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebConTablas.Models.Paciente", "Paciente")
                        .WithMany("FormulariosAsignados")
                        .HasForeignKey("ID_Paciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("WebConTablas.Models.FormularioPregunta", b =>
                {
                    b.HasOne("WebConTablas.Models.Formulario", "Formulario")
                        .WithMany("Preguntas")
                        .HasForeignKey("ID_Formulario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebConTablas.Models.Pregunta", "Pregunta")
                        .WithMany("Formularios")
                        .HasForeignKey("ID_Pregunta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("WebConTablas.Models.Paciente", b =>
                {
                    b.HasOne("WebConTablas.Models.Psiquiatra", "Psiquiatra")
                        .WithMany("Pacientes")
                        .HasForeignKey("ID_Psiquiatra")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Psiquiatra");
                });

            modelBuilder.Entity("WebConTablas.Models.Respuesta", b =>
                {
                    b.HasOne("WebConTablas.Models.FormularioAsignado", "FormularioAsignado")
                        .WithMany("Respuestas")
                        .HasForeignKey("ID_Asignacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebConTablas.Models.Pregunta", "Pregunta")
                        .WithMany("Respuestas")
                        .HasForeignKey("ID_Pregunta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormularioAsignado");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("WebConTablas.Models.Formulario", b =>
                {
                    b.Navigation("FormulariosAsignados");

                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("WebConTablas.Models.FormularioAsignado", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("WebConTablas.Models.Paciente", b =>
                {
                    b.Navigation("DiariosEmocionales");

                    b.Navigation("FormulariosAsignados");
                });

            modelBuilder.Entity("WebConTablas.Models.Pregunta", b =>
                {
                    b.Navigation("Formularios");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("WebConTablas.Models.Psiquiatra", b =>
                {
                    b.Navigation("Formularios");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
